{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["Card","_ref","id","name","email","react_default","a","createElement","className","src","concat","alt","CardList","robots","map","user","components_Card","key","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","inherits","createClass","value","error","errorInfo","setState","Component","App","onSearchChange","event","searchField","target","isLoading","_this2","fetch","then","response","json","users","_this$state","filterRobots","filter","robot","toLowerCase","includes","length","components_SearchBox","components_Scroll","components_ErrorBoundry","components_CardList","ReactDOM","createRoot","document","getElementById","render","react","src_containers_App"],"mappings":"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","file":"static/js/main.3db9291a.chunk.js","sourcesContent":["import React from 'react';\nimport 'tachyons'\nconst Card =({id, name, email}) => {\n    return (\n      <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n          <img src={`https://robohash.org/${id}?200x200`} alt='robots'></img>\n          <div>\n              <h2>{name}</h2>\n              <p>{email}</p>\n          </div>\n      </div>\n    );\n}\n\nexport default Card;","import React from \"react\";\nimport Card from \"./Card\";\n\nconst CardList = ({robots}) => {\n    return (<div>\n        {robots.map(user => {\n            return <Card\n                key={user.id}\n                id={user.id}\n                name={user.name}\n                email={user.email}\n            />\n        })}\n    </div>);\n}\n\nexport default CardList","import React from \"react\";\n\nconst SearchBox = ({searchChange}) => {\n    return (\n        <div className='pa2'>\n            <input\n                className='pa3 ba b--green bg-light-blue'\n                type='search'\n                placeholder='search robots'\n                onChange={searchChange}\n            />\n        </div>\n    );\n}\n\nexport default SearchBox;","import React from \"react\";\n\nconst Scroll = (props) => {\n    return (<div style={{overflowY: 'scroll', border: '1px solid black', height: '800px'}}>\n            {props.children}\n        </div>);\n}\n\nexport default Scroll;","import React, {Component} from \"react\";\n\nclass ErrorBoundry extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError : false\n        }\n    }\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({\n            hasError : true\n        })\n    }\n\n    render() {\n        if(this.state.hasError){\n            return <h1>Ooops. That is not good</h1>\n        }\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundry;","import React, {Component} from \"react\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\";\nimport Scroll from \"../components/Scroll\"\nimport './App.css'\nimport ErrorBoundry from \"../components/ErrorBoundry\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            robots: [], searchField: '', isLoading: true\n        };\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => {\n                this.setState({\n                    robots: users, isLoading: users != null\n                })\n            })\n    }\n\n    onSearchChange = (event) => this.setState({searchField: event.target.value})\n\n    render() {\n        const {robots, searchField, isLoading} = this.state;\n        const filterRobots = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchField.toLowerCase())\n        })\n        return (!robots.length && isLoading) ? <h1 className={'tc'}>Loading...</h1> : (<div className='tc'>\n            <h1 className='f1'>RobotFriends</h1>\n            <SearchBox searchChange={this.onSearchChange}/>\n            <Scroll>\n                <ErrorBoundry>\n                    <CardList robots={filterRobots}/>\n                </ErrorBoundry>\n            </Scroll>\n        </div>);\n    }\n}\n\nexport default App;","import React, {StrictMode} from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from \"./containers/App\";\n// import reportWebVitals from './reportWebVitals';\n// import registerServiceWorker from './registerServiceWorker';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<StrictMode>\n    <App/>\n</StrictMode>);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n// registerServiceWorker();\n"],"sourceRoot":""}